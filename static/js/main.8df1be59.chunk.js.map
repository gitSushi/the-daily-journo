{"version":3,"sources":["Components/WallBtn.js","Components/AddPost.js","Components/Friend.js","Components/Friends.js","Components/UserWall.js","Components/FriendsWall.js","Components/FollowFriend.js","Components/UserAccount.js","Redux/Action.js","Redux/ActionType.js","App.js","Redux/Reducer.js","index.js"],"names":["WallBtn","active","title","onSetActive","className","onClick","AddPost","props","state","toggleIconInput","bind","document","getElementsByClassName","classList","add","this","onSubmit","submit","htmlFor","id","type","name","React","Component","Friend","unfollowSpan","showUnfollow","hideUnfollow","setState","onMouseOver","onMouseLeave","unfollow","f","target","style","color","connect","collections","currentUser","friends","length","map","e","i","key","yourMsg","posts","slice","reverse","post","ms","n","Date","now","t","Math","floor","when","date","theWall","friendsPosts","sort","a","b","userName","FollowFriend","attrAddFriend","list","value","navBtns","UserAccount","activeIndex","todaysDate","submitPost","methodAddFriend","d","year","getFullYear","month","getMonth","dayNb","getDate","day","getDay","preventDefault","msg","changeInput","postObj","userId","sendPost","lastTenObj","postId","lastTen","shiftLastTen","pushLastTen","remove","btnKey","fArr","unfriended","previousSibling","textContent","filteredFriends","filter","delIdx","indexOf","removeFriend","updateRemovedFriendsPosts","nameIdx","findIndex","col","newPosts","forEach","ea","updateAddedFriendsPosts","friendChoice","users","eachUser","push","includes","addFriend","getNewPosts","isLoggedIn","btn","btnIdx","clickWall","payload","deletionId","friendName","App","showModal","availability","availabilityClass","boolPotential","logOut","handleOpenModal","handleCloseModal","signIn","availableName","logIn","formatTime","clearCurrentUser","newUserName","addUser","logCurrentUser","typedIn","toRegex","RegExp","potential","user","test","every","bool","allUsers","getColIdx","alert","parseInt","toDateString","lT","isOpen","contentLabel","onRequestClose","shouldCloseOnOverlayClick","overlayClassName","ariaHideApp","onChange","required","initialState","friendsPostsReducer","friendsName","friendIdx","eachPosts","store","createStore","action","updatedCollections","idx","fr","addedFriends","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8df1be59.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WallBtn = ({ active, title, onSetActive }) => {\r\n  return (\r\n    <span\r\n      className={active ? \"wall-button this-btn\" : \"wall-button\"}\r\n      onClick={onSetActive}\r\n    >\r\n      {title}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default WallBtn;\r\n","import React from \"react\";\r\n\r\nclass AddPost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.toggleIconInput = this.toggleIconInput.bind(this);\r\n  }\r\n\r\n  toggleIconInput() {\r\n    document.getElementsByClassName(\"share\")[0].classList.add(\"rotate-to-hide\");\r\n    document.getElementsByClassName(\"the-form\")[0].classList.add(\"slide-down\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <div className=\"share\" onClick={this.toggleIconInput}>\r\n          <span>\r\n            <i className=\"fas fa-pen-nib fa-2x\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"the-form\">\r\n          <form onSubmit={this.props.submit}>\r\n            <label htmlFor=\"feel-like-sharing\">Feel like sharing :</label>\r\n            <input id=\"feel-like-sharing\" type=\"text\" name=\"changeInput\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPost;\r\n","import React from \"react\";\r\n\r\nclass Friend extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      unfollowSpan: \"\"\r\n    };\r\n\r\n    this.showUnfollow = this.showUnfollow.bind(this);\r\n    this.hideUnfollow = this.hideUnfollow.bind(this);\r\n  }\r\n\r\n  showUnfollow() {\r\n    this.setState({\r\n      unfollowSpan: \"unfollow\"\r\n    });\r\n  }\r\n  hideUnfollow() {\r\n    this.setState({\r\n      unfollowSpan: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <li\r\n          className=\"friend-item\"\r\n          onMouseOver={this.showUnfollow}\r\n          onMouseLeave={this.hideUnfollow}\r\n        >\r\n          {this.props.name}\r\n          <span\r\n            onClick={this.props.unfollow}\r\n            className=\"unfollow\"\r\n            onMouseOver={(f) => {\r\n              f.target.style.color = \"red\";\r\n            }}\r\n            onMouseLeave={(f) => {\r\n              f.target.style.color = \"#333\";\r\n            }}\r\n          >\r\n            {this.state.unfollowSpan}\r\n          </span>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Friend;\r\n","import React from \"react\";\r\nimport Friend from \"./Friend\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Friends(props) {\r\n  return (\r\n    <div>\r\n      {props.collections[props.currentUser.id].friends.length === 0 ? (\r\n        <p>Your Sucky Friends ain't here or YOU are a LOSER !</p>\r\n      ) : (\r\n        <div>\r\n          <ul>\r\n            {props.collections[props.currentUser.id].friends.map((e, i) => (\r\n              <Friend name={e} key={i} unfollow={props.unfollow} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps)(Friends);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction UserWall(props) {\r\n  const when = (ms) => {\r\n    let n = Date.now();\r\n    // divided by 1 day in milliseconds\r\n    let t = Math.floor((n - ms) / 86400000);\r\n    return t < 1 ? \"today\" : t < 2 ? \"Yesterday\" : `${t} days ago`;\r\n  };\r\n\r\n  let yourMsg = props.collections[props.currentUser.id].posts;\r\n  return (\r\n    <div>\r\n      {yourMsg.length === 0 && <p>Your Most Intimate Thoughts</p>}\r\n      <div className=\"your-msg-wall\">\r\n        {yourMsg\r\n          .slice(0)\r\n          .reverse()\r\n          .map((e, i) => (\r\n            <div key={i} className=\"your-msg\">\r\n              <p className=\"your-msg-post\">{e.post}</p>\r\n              <p className=\"date your-msg-date\">at {when(e.date)}</p>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps)(UserWall);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction FriendsWall({ theWall }) {\r\n  /*\r\n   * returns when post was written in days\r\n   * @param { int in milliseconds }\r\n   * @return { string }\r\n   */\r\n  const when = (ms) => {\r\n    let n = Date.now();\r\n    // divided by 1 day in milliseconds\r\n    let t = Math.floor((n - ms) / 86400000);\r\n    return t < 1 ? \"today\" : t < 2 ? \"Yesterday\" : `${t} days ago`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {theWall.length === 0 && <p>No message on the board yet.</p>}\r\n      <div className=\"the-wall\">\r\n        {theWall\r\n          .slice()\r\n          .sort(function (a, b) {\r\n            return b.date - a.date;\r\n          })\r\n          .map((e, i) => (\r\n            <div key={i} className=\"post-block\">\r\n              <h3 className=\"wall-post username\">{e.userName}</h3>\r\n              <p className=\"wall-post post\">{e.post}</p>\r\n              <p className=\"wall-post date\">{when(e.date)}</p>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { theWall: state.currentUser.friendsPosts };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FriendsWall);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass FollowFriend extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.toggleIconInput = this.toggleIconInput.bind(this);\r\n  }\r\n\r\n  toggleIconInput() {\r\n    document.getElementsByClassName(\"share\")[1].classList.add(\"rotate-to-hide\");\r\n    document.getElementsByClassName(\"the-form\")[1].classList.add(\"slide-down\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-container\">\r\n        <div className=\"share\" onClick={this.toggleIconInput}>\r\n          <span>\r\n            <i className=\"fas fa-user-friends fa-2x\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"the-form\">\r\n          <form onSubmit={this.props.attrAddFriend}>\r\n            <label htmlFor=\"friend-choice\">Add a friend : </label>\r\n            <input\r\n              list=\"friend-data-list\"\r\n              name=\"friendChoice\"\r\n              id=\"friend-choice\"\r\n            />\r\n            <datalist id=\"friend-data-list\">\r\n              {this.props.collections.map((e, i) => (\r\n                <option key={i} value={e.userName} />\r\n              ))}\r\n            </datalist>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps)(FollowFriend);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport WallBtn from \"./WallBtn\";\r\nimport AddPost from \"./AddPost\";\r\nimport Friends from \"./Friends\";\r\nimport UserWall from \"./UserWall\";\r\nimport FriendsWall from \"./FriendsWall\";\r\nimport FollowFriend from \"./FollowFriend\";\r\nimport {\r\n  sendPost,\r\n  shiftLastTen,\r\n  pushLastTen,\r\n  removeFriend,\r\n  addFriend,\r\n  updateRemovedFriendsPosts,\r\n  updateAddedFriendsPosts\r\n} from \"../Redux/Action\";\r\n\r\nconst navBtns = [\r\n  {\r\n    title: \"The Wall\",\r\n    key: 0\r\n  },\r\n  {\r\n    title: \"Your Messages\",\r\n    key: 1\r\n  },\r\n  {\r\n    title: \"Friends\",\r\n    key: 2\r\n  }\r\n];\r\n\r\nclass UserAccount extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeIndex: 0,\r\n      todaysDate: \"\"\r\n    };\r\n\r\n    this.submitPost = this.submitPost.bind(this);\r\n    this.unfollow = this.unfollow.bind(this);\r\n    this.methodAddFriend = this.methodAddFriend.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let d = new Date();\r\n    let year = d.getFullYear();\r\n    const months = [\r\n      \"january\",\r\n      \"february\",\r\n      \"march\",\r\n      \"april\",\r\n      \"may\",\r\n      \"june\",\r\n      \"july\",\r\n      \"august\",\r\n      \"september\",\r\n      \"october\",\r\n      \"november\",\r\n      \"december\"\r\n    ];\r\n    let month = months[d.getMonth()];\r\n    let dayNb = d.getDate();\r\n    const days = [\r\n      \"sunday\",\r\n      \"monday\",\r\n      \"tuesday\",\r\n      \"wednesday\",\r\n      \"thursday\",\r\n      \"friday\",\r\n      \"saturday\"\r\n    ];\r\n    let day = days[d.getDay()];\r\n    this.setState({\r\n      todaysDate: `${day}. ${month} ${dayNb}, ${year}`\r\n    });\r\n  }\r\n\r\n  submitPost(e) {\r\n    e.preventDefault();\r\n    const msg = e.target.changeInput.value;\r\n    if (msg !== \"\") {\r\n      let d = Date.now();\r\n      // mock send to server\r\n      const postObj = {\r\n        userId: this.props.currentUser.id,\r\n        post: msg,\r\n        date: `${d}`\r\n      };\r\n      this.props.sendPost(postObj);\r\n\r\n      const lastTenObj = {\r\n        userId: this.props.currentUser.id,\r\n        postId:\r\n          this.props.collections[this.props.currentUser.id].posts.length - 1\r\n      };\r\n      if (this.props.lastTen.length === 10) {\r\n        this.props.shiftLastTen();\r\n        this.props.pushLastTen(lastTenObj);\r\n      } else {\r\n        this.props.pushLastTen(lastTenObj);\r\n      }\r\n      e.target.changeInput.value = \"\";\r\n    }\r\n    // slides the form back up\r\n    document\r\n      .getElementsByClassName(\"the-form\")[0]\r\n      .classList.remove(\"slide-down\");\r\n    document\r\n      .getElementsByClassName(\"share\")[0]\r\n      .classList.remove(\"rotate-to-hide\");\r\n  }\r\n\r\n  clickWall(btnKey) {\r\n    this.setState({ activeIndex: btnKey });\r\n  }\r\n\r\n  unfollow(e) {\r\n    let fArr = this.props.collections[this.props.currentUser.id].friends;\r\n    let unfriended = e.target.previousSibling.textContent;\r\n    let filteredFriends = this.props.currentUser.friendsPosts.filter((e) => {\r\n      return e.userName !== unfriended;\r\n    });\r\n    let delIdx = fArr.indexOf(unfriended);\r\n\r\n    this.props.removeFriend(this.props.currentUser.id, delIdx);\r\n    this.props.updateRemovedFriendsPosts(filteredFriends);\r\n  }\r\n\r\n  getNewPosts(name) {\r\n    let nameIdx = this.props.collections.findIndex((col) => {\r\n      return col.userName === name;\r\n    });\r\n    let newPosts = this.props.collections[nameIdx].posts;\r\n    newPosts.forEach((ea) => {\r\n      ea.userName = name;\r\n    });\r\n    this.props.updateAddedFriendsPosts(newPosts);\r\n  }\r\n\r\n  methodAddFriend(e) {\r\n    e.preventDefault();\r\n    const name = e.target.friendChoice.value;\r\n    e.target.friendChoice.value = \"\";\r\n    let users = [];\r\n    this.props.collections.forEach((eachUser) => users.push(eachUser.userName));\r\n    // if part of collections.user and not user themselve\r\n    if (\r\n      users.includes(name) &&\r\n      name !== this.props.collections[this.props.currentUser.id].userName\r\n    ) {\r\n      // if not already among friends\r\n      let alreadyMyBFF = this.props.collections[\r\n        this.props.currentUser.id\r\n      ].friends.includes(name);\r\n      if (!alreadyMyBFF) {\r\n        this.props.addFriend(this.props.currentUser.id, name);\r\n        this.getNewPosts(name);\r\n      }\r\n    }\r\n    // slide back up the form\r\n    document\r\n      .getElementsByClassName(\"the-form\")[1]\r\n      .classList.remove(\"slide-down\");\r\n    document\r\n      .getElementsByClassName(\"share\")[1]\r\n      .classList.remove(\"rotate-to-hide\");\r\n  }\r\n\r\n  render() {\r\n    const { activeIndex, todaysDate } = this.state;\r\n    return (\r\n      <div>\r\n        {this.props.currentUser.isLoggedIn && (\r\n          <div>\r\n            <p className=\"intro-user-account\">\r\n              <span>\r\n                Hello{\" \"}\r\n                <span className=\"username\">{this.props.currentUser.name}</span>\r\n              </span>\r\n              <span className=\"todays-date\">{todaysDate}</span>\r\n            </p>\r\n            <div className=\"cross-container\">\r\n              <AddPost submit={this.submitPost} />\r\n              <FollowFriend attrAddFriend={this.methodAddFriend} />\r\n            </div>\r\n\r\n            <nav className=\"wall-nav\">\r\n              {navBtns.map((btn, btnIdx) => (\r\n                <WallBtn\r\n                  key={btn.key}\r\n                  active={btnIdx === activeIndex}\r\n                  onSetActive={() => this.clickWall(btnIdx)}\r\n                  title={btn.title}\r\n                />\r\n              ))}\r\n            </nav>\r\n            {activeIndex === 0 ? (\r\n              <div>\r\n                <FriendsWall />\r\n              </div>\r\n            ) : activeIndex === 1 ? (\r\n              <UserWall />\r\n            ) : (\r\n              <Friends unfollow={this.unfollow} />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nexport default connect(mapStateToProps, {\r\n  sendPost,\r\n  shiftLastTen,\r\n  pushLastTen,\r\n  removeFriend,\r\n  addFriend,\r\n  updateRemovedFriendsPosts,\r\n  updateAddedFriendsPosts\r\n})(UserAccount);\r\n","import {\r\n  CURRENT_USER,\r\n  CLEAR_USER,\r\n  ADD_USER,\r\n  SHIFT_LAST_TEN,\r\n  PUSH_LAST_TEN,\r\n  SEND_POST,\r\n  REMOVE_FRIEND,\r\n  UPDATE_REMOVED_FRIENDS_POSTS,\r\n  UPDATE_ADDED_FRIENDS_POSTS,\r\n  ADD_FRIEND\r\n} from \"./ActionType\";\r\n\r\nexport const logCurrentUser = (user, id) => {\r\n  return {\r\n    type: CURRENT_USER,\r\n    payload: {\r\n      user,\r\n      id\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearCurrentUser = () => {\r\n  return {\r\n    type: CLEAR_USER\r\n  };\r\n};\r\n\r\nexport const addUser = (userName) => {\r\n  return {\r\n    type: ADD_USER,\r\n    payload: {\r\n      userName\r\n    }\r\n  };\r\n};\r\n\r\nexport const shiftLastTen = () => {\r\n  return {\r\n    type: SHIFT_LAST_TEN\r\n  };\r\n};\r\n\r\nexport const pushLastTen = ({ userId, postId }) => {\r\n  return {\r\n    type: PUSH_LAST_TEN,\r\n    payload: {\r\n      userId,\r\n      postId\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendPost = ({ userId, post, date }) => {\r\n  return {\r\n    type: SEND_POST,\r\n    payload: {\r\n      userId,\r\n      post,\r\n      date\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeFriend = (userId, deletionId) => {\r\n  return {\r\n    type: REMOVE_FRIEND,\r\n    payload: {\r\n      userId,\r\n      deletionId\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateRemovedFriendsPosts = (friendsPosts) => {\r\n  return {\r\n    type: UPDATE_REMOVED_FRIENDS_POSTS,\r\n    payload: {\r\n      friendsPosts\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAddedFriendsPosts = (friendsPosts) => {\r\n  return {\r\n    type: UPDATE_ADDED_FRIENDS_POSTS,\r\n    payload: {\r\n      friendsPosts\r\n    }\r\n  };\r\n};\r\n\r\nexport const addFriend = (userId, friendName) => {\r\n  return {\r\n    type: ADD_FRIEND,\r\n    payload: {\r\n      userId,\r\n      friendName\r\n    }\r\n  };\r\n};\r\n","export const CURRENT_USER = \"CURRENT_USER\";\r\nexport const CLEAR_USER = \"CLEAR_USER\";\r\nexport const INITIALIZE_FRIENDS_POSTS = \"INITIALIZE_FRIENDS_POSTS\";\r\nexport const ADD_USER = \"ADD_USER\";\r\n\r\nexport const SHIFT_LAST_TEN = \"SHIFT_LAST_TEN\";\r\nexport const PUSH_LAST_TEN = \"PUSH_LAST_TEN\";\r\n\r\nexport const SEND_POST = \"SEND_POST\";\r\n\r\nexport const REMOVE_FRIEND = \"REMOVE_FRIEND\";\r\nexport const UPDATE_REMOVED_FRIENDS_POSTS = \"UPDATE_REMOVED_FRIENDS_POSTS\";\r\nexport const UPDATE_ADDED_FRIENDS_POSTS = \"UPDATE_ADDED_FRIENDS_POSTS\";\r\nexport const ADD_FRIEND = \"ADD_FRIEND\";\r\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport UserAccount from \"./Components/UserAccount\";\nimport { addUser, logCurrentUser, clearCurrentUser } from \"./Redux/Action\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      availability: true,\n      availabilityClass: \"\",\n      boolPotential: false\n    };\n\n    this.logOut = this.logOut.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.availableName = this.availableName.bind(this);\n    this.logIn = this.logIn.bind(this);\n    this.formatTime = this.formatTime.bind(this);\n  }\n\n  logOut() {\n    this.props.clearCurrentUser();\n    this.handleCloseModal();\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: !this.state.showModal });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: !this.state.showModal });\n  }\n\n  signIn(e) {\n    e.preventDefault();\n    const name = e.target.newUserName.value;\n    if (this.state.boolPotential) {\n      this.props.addUser(name);\n      let id = this.props.collections.length;\n      this.props.logCurrentUser(name, id);\n\n      this.setState({\n        availability: \"\"\n      });\n    }\n  }\n\n  availableName(e) {\n    e.preventDefault();\n    const typedIn = e.target.value;\n    const toRegex = new RegExp(`^${typedIn}`);\n    const potential = this.props.collections\n      .map((user) => {\n        return !toRegex.test(user.userName);\n      })\n      .every((bool) => bool);\n\n    this.setState({ boolPotential: potential });\n\n    if (typedIn === \"\") {\n      this.setState({\n        availability: \"\",\n        availabilityClass: \"\"\n      });\n    } else if (!potential) {\n      this.setState({\n        availability: \"username is not available\",\n        availabilityClass: \"not-available\"\n      });\n    } else {\n      this.setState({\n        availability: \"this username is now yours\",\n        availabilityClass: \"is-available\"\n      });\n    }\n  }\n\n  logIn(e) {\n    e.preventDefault();\n    const allUsers = [];\n    this.props.collections.map((user) => allUsers.push(user.userName));\n    const name = e.target.userName.value;\n    let id = this.getColIdx(name);\n    if (allUsers.includes(name)) {\n      this.props.logCurrentUser(name, id);\n    } else {\n      alert(\"You are not signed in yet\");\n    }\n  }\n\n  getColIdx(name) {\n    return this.props.collections.findIndex((col) => {\n      return col.userName === name;\n    });\n  }\n\n  formatTime(ms) {\n    const t = new Date(parseInt(ms, 10));\n    return t.toDateString();\n  }\n\n  render() {\n    let lT = this.props.lastTen;\n    return (\n      <div>\n        <nav className=\"title-nav\">\n          <div className=\"ze-wall\">\n            <h1>THE DAILY JOURNO</h1>\n            <p>You write the news</p>\n          </div>\n          <div className=\"class-btn\">\n            {this.props.currentUser.isLoggedIn ? (\n              <button onClick={this.logOut}>log out</button>\n            ) : (\n              <div>\n                <button onClick={this.handleOpenModal}>log in</button>\n                <ReactModal\n                  isOpen={this.state.showModal}\n                  contentLabel=\"onRequestClose Example\"\n                  onRequestClose={this.handleCloseModal}\n                  shouldCloseOnOverlayClick={true}\n                  className=\"Modal\"\n                  overlayClassName=\"Overlay\"\n                  ariaHideApp={false}\n                >\n                  <div className=\"flex-row-form\">\n                    <div className=\"flex-row-item\">\n                      <p>Sign in</p>\n                      <form onSubmit={this.signIn}>\n                        <input\n                          type=\"text\"\n                          name=\"newUserName\"\n                          onChange={this.availableName}\n                          required\n                        />\n                      </form>\n                      <p\n                        className={`availability ${this.state.availabilityClass}`}\n                      >\n                        {this.state.availability}\n                      </p>\n                    </div>\n                    <div className=\"flex-row-item\">\n                      <p>Log in</p>\n                      <form onSubmit={this.logIn}>\n                        <input type=\"text\" name=\"userName\" required />\n                      </form>\n                    </div>\n                    <div className=\"flex-row-item\">\n                      <span className=\"close\" onClick={this.handleCloseModal}>\n                        &times;\n                      </span>\n                    </div>\n                  </div>\n                </ReactModal>\n              </div>\n            )}\n          </div>\n        </nav>\n        {this.props.currentUser.isLoggedIn ? (\n          <UserAccount />\n        ) : (\n          <div>\n            <h2>The Latest News</h2>\n            <div className=\"posts-wall\">\n              {this.props.lastTen.length > 0 ? (\n                lT\n                  .slice(0)\n                  .reverse()\n                  .map((e, i) => (\n                    <div key={i} className=\"post-block\">\n                      <h3 className=\"wall-post username\">\n                        {this.props.collections[e.userId].userName}\n                      </h3>\n                      <p className=\"wall-post post\">\n                        {this.props.collections[e.userId].posts[e.postId].post}\n                      </p>\n                      <p className=\"wall-post date\">\n                        {this.formatTime(\n                          this.props.collections[e.userId].posts[e.postId].date\n                        )}\n                      </p>\n                    </div>\n                  ))\n              ) : (\n                <p>We are a brand new website. Be the first to leave a post.</p>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => state;\n\nexport default connect(mapStateToProps, {\n  logCurrentUser,\n  clearCurrentUser,\n  addUser\n})(App);\n","import {\r\n  CURRENT_USER,\r\n  CLEAR_USER,\r\n  ADD_USER,\r\n  SHIFT_LAST_TEN,\r\n  PUSH_LAST_TEN,\r\n  SEND_POST,\r\n  REMOVE_FRIEND,\r\n  UPDATE_REMOVED_FRIENDS_POSTS,\r\n  UPDATE_ADDED_FRIENDS_POSTS,\r\n  ADD_FRIEND\r\n} from \"./ActionType\";\r\n\r\nconst initialState = {\r\n  collections: [\r\n    {\r\n      userName: \"user\",\r\n      posts: [\r\n        {\r\n          post: \"still alive\",\r\n          date: \"1589470081851\"\r\n        },\r\n        {\r\n          post: \"alive and kicking\",\r\n          date: \"1589642862204\"\r\n        }\r\n      ],\r\n      friends: [\"admin\", \"bob\"]\r\n    },\r\n    {\r\n      userName: \"admin\",\r\n      posts: [\r\n        {\r\n          post: \"working hard or ...\",\r\n          date: \"1589470081851\"\r\n        },\r\n        {\r\n          post: \"hardly working\",\r\n          date: \"1589642862204\"\r\n        }\r\n      ],\r\n      friends: []\r\n    },\r\n    {\r\n      userName: \"bob\",\r\n      posts: [\r\n        {\r\n          post: \"singing all summer,\",\r\n          date: \"1589470341051\"\r\n        },\r\n        {\r\n          post: \"dying in winter\",\r\n          date: \"1589642862204\"\r\n        }\r\n      ],\r\n      friends: []\r\n    },\r\n    {\r\n      userName: \"jane\",\r\n      posts: [\r\n        {\r\n          post: \"still looking for Tarzan ...\",\r\n          date: \"70341051\"\r\n        },\r\n        {\r\n          post: \"till the day I die\",\r\n          date: \"1590396261640\"\r\n        }\r\n      ],\r\n      friends: []\r\n    }\r\n  ],\r\n  lastTen: [],\r\n  currentUser: {\r\n    name: \"\",\r\n    isLoggedIn: false,\r\n    id: -1,\r\n    friendsPosts: []\r\n  }\r\n};\r\n\r\nconst getColIdx = (collections, name) => {\r\n  return collections.findIndex((col) => {\r\n    return col.userName === name;\r\n  });\r\n};\r\n\r\nconst friendsPostsReducer = (collections, id) => {\r\n  let friendsPosts = [];\r\n  if (collections[id].friends.length > 0) {\r\n    collections[id].friends.forEach((friendsName) => {\r\n      let friendIdx = getColIdx(collections, friendsName);\r\n      let eachPosts = collections[friendIdx].posts;\r\n      eachPosts.forEach((ea) => {\r\n        ea.userName = friendsName;\r\n      });\r\n      friendsPosts = [...friendsPosts, ...eachPosts];\r\n    });\r\n  }\r\n  return friendsPosts;\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: {\r\n          name: action.payload.user,\r\n          isLoggedIn: !state.currentUser.isLoggedIn,\r\n          id: action.payload.id,\r\n          friendsPosts: friendsPostsReducer(\r\n            state.collections,\r\n            action.payload.id\r\n          )\r\n        }\r\n      };\r\n    case CLEAR_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: {\r\n          name: \"\",\r\n          isLoggedIn: !state.currentUser.isLoggedIn,\r\n          id: -1,\r\n          friendsPosts: []\r\n        }\r\n      };\r\n    case ADD_USER:\r\n      const { userName } = action.payload;\r\n      return {\r\n        ...state,\r\n        collections: [\r\n          ...state.collections,\r\n          {\r\n            userName,\r\n            posts: [],\r\n            friends: []\r\n          }\r\n        ]\r\n      };\r\n    case SHIFT_LAST_TEN:\r\n      return {\r\n        ...state,\r\n        lastTen: [...state.lastTen.slice(1)]\r\n      };\r\n    case PUSH_LAST_TEN:\r\n      return {\r\n        ...state,\r\n        lastTen: [\r\n          ...state.lastTen,\r\n          {\r\n            userId: action.payload.userId,\r\n            postId: action.payload.postId\r\n          }\r\n        ]\r\n      };\r\n    case SEND_POST:\r\n      const { post, date } = action.payload;\r\n      let updatedCollections = { ...state };\r\n      updatedCollections.collections[action.payload.userId].posts.push({\r\n        post,\r\n        date\r\n      });\r\n      return {\r\n        ...state,\r\n        updatedCollections\r\n      };\r\n    case REMOVE_FRIEND:\r\n      return {\r\n        ...state,\r\n        collections: [\r\n          ...state.collections.map((col, idx) => {\r\n            if (idx === action.payload.userId) {\r\n              return {\r\n                ...col,\r\n                friends: [\r\n                  ...col.friends.filter(\r\n                    (fr, id) => id !== action.payload.deletionId\r\n                  )\r\n                ]\r\n              };\r\n            }\r\n            return col;\r\n          })\r\n        ]\r\n      };\r\n    case UPDATE_REMOVED_FRIENDS_POSTS:\r\n      return {\r\n        ...state,\r\n        currentUser: {\r\n          ...state.currentUser,\r\n          friendsPosts: action.payload.friendsPosts\r\n        }\r\n      };\r\n    case UPDATE_ADDED_FRIENDS_POSTS:\r\n      return {\r\n        ...state,\r\n        currentUser: {\r\n          ...state.currentUser,\r\n          friendsPosts: [\r\n            ...state.currentUser.friendsPosts,\r\n            ...action.payload.friendsPosts\r\n          ]\r\n        }\r\n      };\r\n    case ADD_FRIEND:\r\n      let addedFriends = { ...state };\r\n      addedFriends.collections[action.payload.userId].friends.push(\r\n        action.payload.friendName\r\n      );\r\n      return {\r\n        ...state,\r\n        addedFriends\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// @ts-nocheck\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { reducer } from './Redux/Reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}